from PIL import Image
from dataset_loader import load_dataset
from efficient_net_b0 import efficient_net_b0
from efficient_net_b3 import efficient_net_b3
from vgg16 import vgg16
from xception import xception
from prediction import prediction
import streamlit as st

# ---- Initialize session state for navigation ----
if "current_page" not in st.session_state:
    st.session_state.current_page = "home"

st.markdown("""
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap');

        * {
            font-family: 'Poppins', sans-serif;
        }

        body {
            font-family: 'Poppins', sans-serif;
        }

        h1, h2, h3, h4, h5, h6 {
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
        }

        p, span, div {
            font-family: 'Poppins', sans-serif;
        }

        /* Make Streamlit Container Full-Width */
        .main .block-container {
            max-width: 100vw !important;  /* Force full width */
            padding-left: 0px !important;
            padding-right: 0px !important;
        }

        /* Remove default padding/margin */
        .reportview-container, .appview-container {
            padding: 0 !important;
            margin: 0 !important;
        }

        /* Override default Streamlit layout */
        .st-emotion-cache-z5fcl4 {  /* This class is dynamically generated by Streamlit */
            max-width: 100vw !important;
            padding-left: 0 !important;
            padding-right: 0 !important;
        }

        /* Remove extra body padding */
        body {
            overflow-x: hidden !important;  /* Prevent horizontal scrolling */
        }
               
        /* Main Navbar Container */
        .navbar {
            position: fixed;
            top: 58px;  /* Ensure navbar stays at the top */
            left: 0;
            width: 100vw;
            margin:0;
            background-color: #3F4F44;
            padding: 10px 20px;
            z-index: 1000;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0px 4px 8px rgba(0,0,0,0.2);
        }

        /* Left Menu Icon */
        .menu-icon {
            font-size: 24px;
            color: white;
            cursor: pointer;
            padding: 10px;
        }

        /* Navbar Links */
        .nav-links {
            display: flex;
            gap: 10px;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            font-size: 16px;
            font-weight: bold;
            padding: 8px 12px;
            transition: 0.3s;
        }

        .nav-links a:hover {
            border-radius: 5px;
        }

        /* Login Button */
        .login-btn {
            background-color: white;
            color: #3F4F44 !important;
            padding: 8px 15px;
            border-radius: 10px;
            font-size: 16px;
            font-weight: bold;
            border: 2px solid #3F4F44;
            cursor: pointer;
            text-decoration: none !important;
            display: inline-block;
        }

        .login-btn:hover {
            background-color: lightgray;
        }

    </style>

    <div class="navbar">
         <div class="menu-icon">‚ò∞</div>
        <div class="nav-links">
            <a href="/?page=home">Home</a>
            <a href="/?page=effB0">EfficientNetB0</a>
            <a href="/?page=effB3">EfficientNetB3</a>
            <a href="/?page=vgg16">VGG16</a>
            <a href="/?page=xcep">Xception</a>
            <a href="/?page=predict">Prediction</a>
        </div>
        <a href="/?page=login" class="login-btn">Login</a>
    </div>
""", unsafe_allow_html=True)


# ---- Handle Navigation ----
query_params = st.query_params
if "page" in query_params:
    st.session_state.current_page = query_params["page"]

# ---- Page Content ----
st.markdown('<div class="main">', unsafe_allow_html=True)
if st.session_state.current_page == "home":
    st.title("üìä About Dataset")
    st.write(load_dataset())

elif st.session_state.current_page == "effB0":
    st.title("üìä EfficiencyB0")
    if st.button("Start Training"):
        placeholder = st.empty()
        placeholder.write("‚è≥ **Training in progress... Please wait!**")
        placeholder.write(efficient_net_b0())

elif st.session_state.current_page == "effB3":
    st.title("üìä EfficiencyB3")
    efficient_net_b3()

elif st.session_state.current_page == "vgg16":
    st.title("üìä VGG16")
    vgg16()

elif st.session_state.current_page == "xcep":
    st.title("üìä Xception")
    xception()

elif st.session_state.current_page == "predict":
    st.title("üèóÔ∏è Predict the Image")
    prediction()

else:
    st.error("Page not found!")

st.markdown('</div>', unsafe_allow_html=True)
